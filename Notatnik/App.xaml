<Application x:Class="Notatnik.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="Views/MainWindow.xaml">

    <Application.Resources>

        <!-- ═══  PĘDZLE UŻYWANE W WIELU MIEJSCACH  ═══ -->
        <SolidColorBrush x:Key="RowHoverBrush"    Color="#F0F7FF"/>
        <SolidColorBrush x:Key="RowSelectedBrush" Color="#D6E4FF"/>

        <!-- ═══ 1. WINDOW → FADE-IN + ZOOM  ═══ -->
        <Style TargetType="Window">
            <Setter Property="Opacity" Value="0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             To="1" Duration="0:0:0.40"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                             To="1" Duration="0:0:0.40"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                             To="1" Duration="0:0:0.40"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- ═══ 2. BUTTON → “POP” + CIEŃ  ═══ -->
        <Style x:Key="PopButtonBase" TargetType="Button">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform/>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="6" ShadowDepth="0" Opacity="0"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <!-- Hover -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1.12" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1.12" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                                 To="0.4" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.15"/>
                                <DoubleAnimation Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                                 To="0" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

                <!-- Click-down / Click-up -->
                <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                             To="0.9" Duration="0:0:0.05"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                             To="0.9" Duration="0:0:0.05"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                             To="1.12" Duration="0:0:0.05"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                             To="1.12" Duration="0:0:0.05"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- → GLOBALNE PODPIĘCIE ↓ -->
        <Style TargetType="Button" BasedOn="{StaticResource PopButtonBase}"/>
        <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
               TargetType="Button"
               BasedOn="{StaticResource PopButtonBase}"/>

        <!-- ═══ 3. LISTVIEWITEM → Hover & Selected  ═══ -->
        <Style TargetType="ListViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Foreground" Value="Black"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource RowHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource RowSelectedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ═══ 4. CHECKBOX → Bounce  ═══ -->
        <Style TargetType="CheckBox">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Checked">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                             From="1" To="1.15" Duration="0:0:0.09" AutoReverse="True"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                             From="1" To="1.15" Duration="0:0:0.09" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- ═══ 5. TREEVIEW  ═══ -->
        <!-- 5a. Obracana strzałka (ToggleButton) -->
        <Style x:Key="ArrowRotateStyle" TargetType="ToggleButton">
            <Setter Property="Width"  Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="16" Height="16">
                            <Path x:Name="Arrow"
                                  Data="M 0 0 L 8 8 L 0 16 Z"
                                  Fill="Gray"
                                  RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                             Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                             To="90" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                             Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                             To="0" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 5b. TreeViewItem – hover / selected + podmiana strzałki -->
        <Style TargetType="TreeViewItem">
            <!-- każdy ToggleButton w wierszu używa naszej strzałki -->
            <Style.Resources>
                <Style TargetType="ToggleButton"
                       BasedOn="{StaticResource ArrowRotateStyle}"/>
            </Style.Resources>

            <Setter Property="Padding" Value="2"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="Transparent"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource RowHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource RowSelectedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
