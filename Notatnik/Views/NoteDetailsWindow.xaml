<Window x:Class="Notatnik.Views.NoteDetailsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:models="clr-namespace:Notatnik.Models"
        xmlns:ec="clr-namespace:System.Windows.Documents;assembly=PresentationFramework"
        Title="Szczegóły notatki" Height="550" Width="650"
        WindowStartupLocation="CenterOwner">
    <DockPanel Margin="10">

        <!-- Przyciski Zapisz / Anuluj -->
        <StackPanel Orientation="Horizontal"
                    DockPanel.Dock="Bottom"
                    HorizontalAlignment="Right"
                    Margin="0,10,0,0">
            <Button Content="Zapisz"
                    Command="{Binding SaveCommand}"
                    Width="75" Margin="5,0"/>
            <Button Content="Anuluj"
                    Command="{Binding CancelCommand}"
                    Width="75" Margin="5,0"/>
        </StackPanel>

        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>

                <!-- Tytuł zawsze widoczny -->
                <TextBlock Text="Tytuł:" FontWeight="Bold" Margin="0,0,0,5"/>
                <TextBox Text="{Binding Note.Title, UpdateSourceTrigger=PropertyChanged}"
                         Margin="0,0,0,15"/>

                <!-- 1. CheckListPanel: widoczny tylko gdy Note.Type == CheckList -->
                <StackPanel Margin="0,0,0,15">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Note.Type}"
                                             Value="{x:Static models:NoteType.CheckList}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <TextBlock Text="Elementy listy (CheckList):" FontWeight="Bold" Margin="0,0,0,5"/>

                    <ItemsControl ItemsSource="{Binding ChecklistItems}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="0,2">
                                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                              VerticalAlignment="Center"/>
                                    <TextBox Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Width="380" Margin="5,0"/>
                                    <Button Content="X"
                                            Command="{Binding DataContext.RemoveItemCommand, 
                                                      RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            Width="20" Height="20" Margin="5,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Button Content="Dodaj element"
                            Command="{Binding AddItemCommand}"
                            Margin="0,10,0,0" Width="110"/>
                </StackPanel>

                <!-- 2. RegularPanel: widoczny tylko gdy Note.Type == Regular -->
                <StackPanel Margin="0,0,0,15">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Note.Type}"
                                             Value="{x:Static models:NoteType.Regular}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <TextBlock Text="Treść notatki (Regular):" FontWeight="Bold" Margin="0,0,0,5"/>
                    <TextBox Text="{Binding Note.Content, UpdateSourceTrigger=PropertyChanged}"
                             AcceptsReturn="True"
                             VerticalScrollBarVisibility="Auto"
                             Height="200"/>
                </StackPanel>

                <!-- 3. LongFormatPanel: widoczny tylko gdy Note.Type == LongFormat -->
                <StackPanel Margin="0,0,0,15">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Note.Type}"
                                             Value="{x:Static models:NoteType.LongFormat}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <TextBlock Text="Formatowana treść (LongFormat):" FontWeight="Bold" Margin="0,0,0,5"/>

                    <!-- Pasek narzędzi do formatowania -->
                    <ToolBar Margin="0,0,0,5">
                        <Button Command="{x:Static ec:EditingCommands.ToggleBold}"
                                CommandTarget="{Binding ElementName=RichTextEditor}"
                                Content="B"
                                FontWeight="Bold"
                                Width="25" ToolTip="Pogrubienie"/>
                        <Button Command="{x:Static ec:EditingCommands.ToggleItalic}"
                                CommandTarget="{Binding ElementName=RichTextEditor}"
                                Content="I"
                                FontStyle="Italic"
                                Width="25" ToolTip="Kursywa"/>
                        <Button Command="{x:Static ec:EditingCommands.ToggleUnderline}"
                                CommandTarget="{Binding ElementName=RichTextEditor}"
                                Width="25" ToolTip="Podkreślenie">
                            <TextBlock Text="U"
                                       TextDecorations="Underline"
                                       HorizontalAlignment="Center"/>
                        </Button>
                        <Separator/>
                        <Button Command="{x:Static ec:EditingCommands.IncreaseIndentation}"
                                CommandTarget="{Binding ElementName=RichTextEditor}"
                                Content="→"
                                Width="25" ToolTip="Zwiększ wcięcie"/>
                        <Button Command="{x:Static ec:EditingCommands.DecreaseIndentation}"
                                CommandTarget="{Binding ElementName=RichTextEditor}"
                                Content="←"
                                Width="25" ToolTip="Zmniejsz wcięcie"/>
                    </ToolBar>

                    <!-- RichTextBox do formatowania długiej notatki -->
                    <RichTextBox x:Name="RichTextEditor"
                                 Height="300"
                                 VerticalScrollBarVisibility="Auto"/>
                </StackPanel>

            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</Window>
